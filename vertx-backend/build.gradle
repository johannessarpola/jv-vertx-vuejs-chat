plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    vertxVersion = '3.8.5'
    junitJupiterEngineVersion = '5.4.0'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/configs"
        }
    }
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}
def mainVerticleName = 'fi.johannes.vertx.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

group = 'fi.johannes.bilot'
version = '0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
    deployerJars
}

dependencies {

    compile 'org.mongodb:mongodb-driver-reactivestreams:1.13.1'
    compile 'io.vertx:vertx-reactive-streams:3.8.5'
    compile 'io.vertx:vertx-rx-java2:3.9.0'
    compile 'io.vertx:vertx-web-client:3.8.5'
    compile 'io.vertx:vertx-kafka-client:3.9.0'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.5.0'
    deployerJars "org.apache.maven.wagon:wagon-webdav:1.0-beta-2"
    implementation "io.vertx:vertx-web:$vertxVersion"

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.json', name: 'json', version: '20180130'
    testCompile "org.mockito:mockito-core:2.+"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName,
            "--redeploy=$watchForChange",
            "--launcher-class=$mainClassName",
            "--on-redeploy=$doOnChange",
            "--java-opts", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]
}
